#include <iostream>
#include <vector>
#include <fstream>
using namespace std;

bool correctword(vector<char>showStatus);
//void updatestatus(string word, vector<char>showStatus);
void updatestatus(const string &word, vector<char> &showStatus, char guess);
void lettervalidation(int players, string &word, vector<char> &showStatus, vector<char> &wrongguess);


int main(){

  ifstream inputfile;
  string animalnames;
  vector<string>wordList;
  srand (time(NULL));
  inputfile.open("wordlist.txt");
  while(inputfile >> animalnames) {
    for(char&c: animalnames) {
      c = tolower(c);
    }
    wordList.push_back(animalnames);
  }
  char replay;
  int players;
  // vector<string> wordList = {"monkey","rabbit", "panda", "tiger", "bear", "scorpion", "hawk", "fish", "elephant", "penguin"};

  do{
    cout << "Welcome to Hangman" << endl;
    cout << "By Jafet Gomez" << endl;
    int randomIndex =rand()%10;
    
    string word = wordList[randomIndex];
    vector<char> showStatus(word.length(), '-');
    vector<char> wrongguess;
    do {
       cout << "Enter number of players (1-3): ";
       cin >> players;
       if (cin.fail() || players > 3 || players < 1) {
         cin.clear();
         cin.ignore(10000, '\n');
         cout << "Incorrect input. Try again" << endl;
       }
     } while (players > 3 || players < 1);
    cout << "Guess the word: " << endl;
      for (int i = 0; i < word.size(); i++) {
        cout << '-' << ' ';
      }
    cout << endl;
    
     lettervalidation(players, word, showStatus, wrongguess);
     
    
    cout << "Do you want to play again ?" << endl;
    cout << "Enter 'Y' for yes, enter anything else for no: ";
    cin >> replay;
    
  }while(replay == 'Y');
  
}

bool correctword(vector<char>showStatus) {
  for(char status:showStatus) {
    if (status == '-') {
      return false;
    } 
  }
  return true;
}

//updates the statuts of the word it is shown in the form of - based on word length and shows if a user guessed a correct word
void updatestatus(const string &word, vector<char> &showStatus, char guess, vector<char> &wrongguess) {
  bool correctGuess = false;
  
for (int i = 0; i < word.size(); i++) {
        if (guess == word[i]) {
            showStatus[i] = guess;
          correctGuess = true;
          }
    }
     if (correctGuess) {
         cout << "You guessed a correct letter!"  << endl;
     } else {
         cout << "Letter was not in the word!"  << endl;
       wrongguess.push_back(guess);
       }
  cout << "These are the wrong guesses so far: " << endl;
    for(char letter: wrongguess) {
      cout << letter << " ";
    }
  cout << endl << endl;
  
    //displays status using an advance for loop
    for (char status : showStatus) {
        cout << status << " ";
      }
    cout << endl;

}


//checks if the user enters a correct lowercase letter
void lettervalidation(int players, string &word, vector<char> &showStatus, vector<char> &wrongguess) {
  int player = 1;
  char letter;
  int guess = 0;
  while (guess < 10) {
      cout << "Player" << player << endl;
      cout << "Guess(a-z): ";
      cin >> letter;
      if (letter >= 'a' && letter <= 'z') {
        if (word.find(letter) == string::npos) {
            guess++;
        }
        updatestatus(word, showStatus,letter, wrongguess);
        //lets the player know whos turn is it
        if(correctword(showStatus)) {
          cout << "Congratulations! You have guessed the word" << endl;
          return;
        }
        if(player < players){
          player++;
      
        }else{
         player = 1;
        }
      } else {
        cout << "That's an incorrect. Try again" << endl;
      }
    if (guess == 10) {
      cout << "YOU LOSE" << endl;
      cout << "You have used all your guess" << endl;
      cout << "The word was: " << word << endl;
    }
  }
  

}  


